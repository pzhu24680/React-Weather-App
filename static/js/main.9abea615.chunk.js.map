{"version":3,"sources":["services/httpRequests.js","redux/actions.js","components/searchBar.jsx","redux/selectors.js","components/currentWeather.jsx","components/weather.jsx","components/notFound.jsx","components/hourlyForecast.jsx","components/dailyForecast.jsx","components/navBar.jsx","components/notificationCenter.jsx","App.js","reportWebVitals.js","redux/reducers/weatherData.reducer.js","redux/reducers/settings.reducer.js","redux/reducers/notifications.reducer.js","redux/reducers/error.reducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["get","axios","delete","post","put","REACT_APP_API_KEY","process","loadWeather","city","country","state","dispatch","type","http","then","response","data","coord","lat","lon","setWeatherSuccess","catch","error","setWeatherFailure","weather","payload","errorMessage","message","setLocation","SearchBar","useState","setCity","setCountry","setUSState","useDispatch","countryCodes","Object","keys","countries","countryNames","values","map","name","className","id","placeholder","onChange","e","currentTarget","value","list","toLowerCase","onClick","countryCode","indexOf","handleSearch","icon","selectWeatherData","weatherReducer","weatherDataReducer","selectLocation","location","selectTempUnit","settingsReducer","unit","selectNotificationType","notificationsReducer","selectNotificationTime","time","selectErrorStatus","errorReducer","errorStatus","CurrentWeather","props","useSelector","isRequesting","Fragment","handleIconDisplay","current","main","handleTemperatureCalculations","temp","Weather","NotFound","HourlyForecast","calculateAdjustedTimes","index","Date","setHours","getHours","Number","timezone_offset","getTimezoneOffset","toLocaleString","hour","hour12","hourlyTemperatures","hourlyType","hourly","day","push","indexOfCurrentWeather","_","zip","slice","getHourlyWeather","DailyForecast","calculateDates","setDate","getDate","weekday","dailyHighs","dailyLows","dailyType","daily","max","min","getDailyForecast","NavBar","checkConditions","preventDefault","Notification","handleSettingsSave","input","to","NotificationCenter","handleUserInput","field","saveAlertType","saveAlertTime","htmlFor","target","disabled","requestPermission","permission","Worker","postMessage","createNotification","App","temperature","floor","path","render","component","from","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","defaultState","rootPersistConfig","key","storage","sessionStorage","rootReducer","combineReducers","persistReducer","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","library","add","faSun","faCloud","faCloudShowersHeavy","faSearch","faCog","faBolt","faSnowflake","faSmog","faCloudRain","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9abea615.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default{\n    get:axios.get,\n    delete:axios.delete,\n    post:axios.post,\n    put:axios.put,\n }\n ","import http from \"../services/httpRequests\"\nconst {REACT_APP_API_KEY}=process.env;\nexport const loadWeather=(city,country,state='')=>{\n    return (dispatch)=>{\n        dispatch({type:\"WEATHER_REQUEST_SENT\",})\n        return http.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${state},${country}&appid=${REACT_APP_API_KEY}`)\n        .then(response=>{return http.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${response.data.coord.lat}&lon=${response.data.coord.lon}&appid=${REACT_APP_API_KEY}`)})\n        .then(response=>{dispatch(setWeatherSuccess(response.data))})\n        .catch((error)=>{dispatch(setWeatherFailure(error))})\n    }\n}\n\nexport const setWeatherSuccess=(weather)=>{\n    return{\n        type:'SET_WEATHER_SUCCESS',\n        payload:weather\n    }\n}\n\nexport const setWeatherFailure=(error)=>{\n    return{\n        type:'SET_WEATHER_FAILURE',\n        errorMessage:error.message\n    }\n}\n\nexport const setLocation=(city,country,state=null)=>{\n    return{\n        type:\"SET_LOCATION\",\n        payload:{city,country,state}\n    }\n}\n\nexport const saveTempUnit=(unit)=>{\n    return{\n        type:\"SET_TEMP_UNIT\",\n        payload:unit\n    }\n}\nexport const saveAlertType=(type)=>{\n    return{\n        type:\"SET_ALERT_TYPE\",\n        payload:type\n    }\n}\nexport const saveAlertTime=(time)=>{\n    return{\n        type:\"SET_ALERT_TIME\",\n        payload:time\n    }\n}\n\n\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { loadWeather, setLocation } from \"../redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport countries from \"countries-list\";\n\nconst SearchBar = () => {\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [state, setUSState] = useState(\"\");\n  const dispatch = useDispatch();\n  const states = [\n    \"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"DC\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\"\n    ,\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\n    \"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"PR\"\n    ,\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"VI\",\"WA\",\"WV\",\"WI\",\"WY\",\n  ];\n  const countryCodes = Object.keys(countries.countries);\n  const countryNames = Object.values(countries.countries).map(\n    (country) => country.name\n  );\n\n  const handleSearch = (city, country, state) => {\n    const countryCode =\n      countryCodes[\n        countryNames.map((country) => country.toLowerCase()).indexOf(country)\n      ];\n    if (country !== \"united states\") {\n      dispatch(loadWeather(city, countryCode));\n      dispatch(setLocation(city, countryCode));\n    } else {\n      dispatch(loadWeather(city, countryCode, state));\n      dispatch(setLocation(city, countryCode, state));\n    }\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <input\n        type=\"text\"\n        id=\"name\"\n        placeholder=\"City\"\n        name=\"query\"\n        onChange={(e) => setCity(e.currentTarget.value)}\n      />\n      <input\n        list=\"countries\"\n        type=\"text\"\n        id=\"country\"\n        placeholder=\"Country\"\n        onChange={(e) => setCountry(e.currentTarget.value.toLowerCase())}\n      />\n      <datalist id=\"countries\">\n        {countryNames.map((country) => (\n          <option key={country} value={country} />\n        ))}\n      </datalist>\n      {country === \"united states\" ? (\n        <span>\n          <input\n            className=\"search-bar1\"\n            list=\"states\"\n            type=\"text\"\n            id=\"state\"\n            placeholder=\"State\"\n            onChange={(e) => setUSState(e.currentTarget.value)}\n          />\n          <datalist id=\"states\">\n            {states.map((state) => (\n              <option key={state} value={state} />\n            ))}\n          </datalist>\n        </span>\n      ) : null}\n\n      <button type=\"submit\" onClick={() => handleSearch(city, country, state)}>\n        <FontAwesomeIcon icon=\"search\" />\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","export const selectWeatherData=(state)=>state.weatherReducer.weatherDataReducer.weather;\nexport const selectLocation=(state)=>state.weatherReducer.weatherDataReducer.location;\nexport const selectTempUnit=(state)=>state.weatherReducer.settingsReducer.unit;\nexport const selectNotificationType=(state)=>state.weatherReducer.notificationsReducer.type;\nexport const selectNotificationTime=(state)=>state.weatherReducer.notificationsReducer.time;\nexport const selectErrorStatus=(state)=>state.weatherReducer.errorReducer.errorStatus\n\n\n\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {selectWeatherData, selectLocation, selectErrorStatus,} from \"../redux/selectors\";\n\n\nconst CurrentWeather = (props) => {\n  const location = useSelector(selectLocation);\n  const weather = useSelector(selectWeatherData);\n  const errorStatus = useSelector(selectErrorStatus);\n  const { isRequesting } = useSelector(\n    (state) => state.weatherReducer.weatherDataReducer\n  );\n  return (\n    <div className=\"current-wrapper\">\n      <div className=\"weather-box\">\n        {errorStatus === true && <span>An Error has Occured</span>}\n\n        {isRequesting && !errorStatus ? (\n          <span>Loading...</span>\n        ) : (\n          <React.Fragment>\n            <h1 className=\"capitalize\">{weather && location.city}</h1>\n            <div className=\"fa-10x\">\n              {weather &&\n                props.handleIconDisplay(weather.current.weather[0].main)}\n            </div>\n            {weather && (\n              <p>\n                {props.handleTemperatureCalculations(weather.current.temp)}\n              </p>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default CurrentWeather;\n","import React from \"react\";\nimport SearchBar from \"./searchBar\";\nimport CurrentWeather from \"./currentWeather\";\n\nconst Weather = (props) => {\n  return (\n    <div className=\"background-image\">\n      <SearchBar />\n      <CurrentWeather handleIconDisplay={props.handleIconDisplay} handleTemperatureCalculations={props.handleTemperatureCalculations}/>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nconst NotFound = () => {\n  return <h1>Page Not Found</h1>;\n};\n\nexport default NotFound;\n","import { useSelector } from \"react-redux\";\nimport { selectWeatherData } from \"../redux/selectors\";\nimport { useState } from \"react\";\nimport _ from \"lodash\";\n\nconst HourlyForecast = (props) => {\n  const [time, setTime] = useState(\"\");\n  const weather = useSelector(selectWeatherData);\n\n  const calculateAdjustedTimes = (index) => {\n    let time = new Date();\n    time.setHours(\n      time.getHours() +\n        Number(index) +\n        weather.timezone_offset / 3600 -\n        -time.getTimezoneOffset() / 60\n    );\n    return time.toLocaleString(\"en-US\", { hour: \"numeric\", hour12: true });\n  };\n  const getHourlyWeather = (weather) => {\n    const hourlyTemperatures = [];\n    const hourlyType = [];\n    for (const day of weather.hourly) {\n      hourlyTemperatures.push(day.temp);\n      hourlyType.push(day.weather[0].main);\n    }\n    const indexOfCurrentWeather = hourlyTemperatures.indexOf(\n      weather.current.temp\n    );\n    const hourlyWeather = _.zip(\n      hourlyType.slice(indexOfCurrentWeather),\n      hourlyTemperatures.slice(indexOfCurrentWeather)\n    );\n    return hourlyWeather;\n  };\n  return (\n    <div className=\"hourly-wrapper background-image\">\n      {getHourlyWeather(weather)\n        .slice(0, 24)\n        .map((weather, index) => (\n          <div key={\"hourly\"+index}className=\"hourly-cell\">\n            {calculateAdjustedTimes(time + index)}\n            <div className=\"fa-3x\">{props.handleIconDisplay(weather[0])}</div>\n            <p>{weather[0]}</p>\n            <h1>\n            {props.handleTemperatureCalculations(weather[1])}\n            </h1>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default HourlyForecast;\n","import { useSelector } from \"react-redux\";\nimport { selectWeatherData } from \"../redux/selectors\";\nimport _ from \"lodash\";\n\nconst DailyForecast = (props) => {\n  const weather = useSelector(selectWeatherData);\n  const getDailyForecast = (weather) => {\n    const dailyHighs = [];\n    const dailyLows = [];\n    const dailyType = [];\n    for (const day of weather.daily) {\n      dailyHighs.push(day.temp.max);\n      dailyLows.push(day.temp.min);\n      dailyType.push(day.weather[0].main);\n    }\n    const dailyWeather = _.zip(dailyHighs, dailyLows, dailyType);\n    return dailyWeather;\n  };\n  const calculateDates = (index) => {\n    let time = new Date();\n    let convertedTime =\n      time.getHours() +\n      weather.timezone_offset / 3600 -\n      -time.getTimezoneOffset() / 60 +\n      Number(index);\n    convertedTime >= 24\n      ? time.setDate(time.getDate() + index + 1)\n      : time.setDate(time.getDate() + index);\n    return time.toLocaleString(\"en-us\", { weekday: \"long\" });\n  };\n\n  return (\n    <div className=\"daily-wrapper background-image\">\n      {getDailyForecast(weather).map((weather, index) => (\n        <div key={\"daily\"+index}className=\"hourly-cell daily-cell\">\n          <div className=\"medium-fontsize\">{calculateDates(index)}</div>\n          <span className=\"fa-3x\">{props.handleIconDisplay(weather[2])}</span>\n          <span className=\"large-fontsize\">{weather[2]}</span>\n          <span className=\"bold medium-fontsize\">\n          {props.handleTemperatureCalculations(weather[0])}\n          </span>\n          <span>\n          {props.handleTemperatureCalculations(weather[1])}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DailyForecast;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { selectErrorStatus, selectLocation } from \"../redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { saveTempUnit } from \"../redux/actions\";\nimport { useSelector } from \"react-redux\";\n\nconst NavBar = () => {\n  const location = useSelector(selectLocation);\n  const dispatch = useDispatch();\n  const errorStatus = useSelector(selectErrorStatus);\n\n  const checkConditions = (e) => {\n    if (!location || errorStatus) {\n      e.preventDefault();\n      new Notification(\"Please Enter a Valid Location First!\");\n    }\n  };\n  const handleSettingsSave = (input) => {\n    dispatch(saveTempUnit(input));\n  };\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav me-auto\">\n          <NavLink className=\"nav-item nav-link\" to=\"/weather\">\n            Current Weather\n          </NavLink>\n          <NavLink\n            className=\"nav-item nav-link\"\n            to=\"/hourly-forecast\"\n            onClick={(e) => checkConditions(e)}\n          >\n            Hourly Forecast\n          </NavLink>\n          <NavLink\n            className=\"nav-item nav-link\"\n            to=\"/daily-forecast\"\n            onClick={(e) => checkConditions(e)}\n          >\n            Daily Forecast\n          </NavLink>\n          <NavLink\n            className=\"nav-item nav-link\"\n            to=\"/notification-center\"\n            onClick={(e) => checkConditions(e)}\n          >\n            Notification Center\n          </NavLink>\n        </div>\n        <div className=\"navbar-nav\">\n          <span>\n            <button\n              className=\"medium-fontsize button\"\n              onClick={() => handleSettingsSave(\"fahrenheit\")}\n            >\n              F\n            </button>\n            <span>/</span>\n            <button\n              className=\"medium-fontsize button\"\n              onClick={(e) => handleSettingsSave(\"celsius\")}\n            >\n              C\n            </button>\n          </span>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {selectNotificationType, selectNotificationTime, selectLocation} from \"../redux/selectors\";\nimport { saveAlertType, saveAlertTime } from \"../redux/actions\";\nconst NotificationCenter = () => {\n  const dispatch = useDispatch();\n  const type = useSelector(selectNotificationType);\n  const time = useSelector(selectNotificationTime);\n  const location = useSelector(selectLocation);\n  const {REACT_APP_API_KEY}=process.env;\n\n  const handleUserInput = (input, field) => {\n    if (field === \"weather-type\") {\n      dispatch(saveAlertType(input));\n    }\n    if (field === \"alert-time\") {\n      dispatch(saveAlertTime(input));\n    }\n  };\n\n  const createNotification = ({ type, time, location,}) => {\n    Notification.requestPermission().then((permission) => {\n      if (permission === \"granted\") {\n        const myWorker = new Worker(\"worker.js\");\n        myWorker.postMessage({ type, time, location,REACT_APP_API_KEY});\n        new Notification(\"Notification Created Successfully!\");\n      }\n      \n    });\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"weather-type\">Select a Weather type for your alert? </label>\n      <select\n        id=\"weather-type\"\n        onChange={(e) => handleUserInput(e.target.value, \"weather-type\")}\n        name=\"weather-type\"\n      >\n        <option value=\"\">Select a Weather Type</option>\n        <option value=\"Clouds\">Clouds</option>\n        <option value=\"Clear\">Clear</option>\n        <option value=\"Rain\">Rain</option>\n        <option value=\"Snow\">Snow</option>\n        <option value=\"Thunderstorm\">Thunderstorm</option>\n      </select>\n      <br />\n      <label htmlFor=\"alert-time\">When do you want to be alerted? </label>\n      <select\n        id=\"alert-time\"\n        onChange={(e) => handleUserInput(e.target.value, \"alert-time\")}\n        name=\"alert-time\"\n      >\n        <option value=\"\">Select a Time</option>\n        <option value=\"5\">5 Minutes Before</option>\n        <option value=\"10\">10 Minutes Before</option>\n        <option value=\"15\">15 Minutes Before</option>\n        <option value=\"30\">30 Minutes Before</option>\n        <option value=\"45\">45 Minutes Before</option>\n      </select>\n      <br />\n      <button\n        disabled={!location || !type || !time}\n        onClick={() => createNotification({ type, time, location})}\n      >\n        Create Notification\n      </button>\n    </div>\n  );\n};\n\nexport default NotificationCenter;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Weather from \"./components/weather\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NotFound from \"./components/notFound\";\nimport HourlyForecast from \"./components/hourlyForecast\";\nimport DailyForecast from \"./components/dailyForecast\";\nimport NavBar from \"./components/navBar\";\nimport NotificationCenter from \"./components/notificationCenter\";\nimport { floor } from \"lodash\";\nimport { selectTempUnit } from \"./redux/selectors\";\nimport { useSelector } from \"react-redux\";\n\nconst App = () => {\n  const unit = useSelector(selectTempUnit);\n  const handleIconDisplay = (data) => {\n    switch (data) {\n      case \"Clouds\":\n        return <FontAwesomeIcon icon=\"cloud\" className=\"cloud\" />;\n      case \"Rain\":\n        return <FontAwesomeIcon icon=\"cloud-showers-heavy\" className=\"cloud\" />;\n      case \"Clear\":\n        return <FontAwesomeIcon icon=\"sun\" className=\"sun\" />;\n      case \"Thunderstorm\":\n        return <FontAwesomeIcon icon=\"bolt\" />;\n      case \"Snow\":\n        return <FontAwesomeIcon icon=\"snowflake\" />;\n      case \"Smoke\":\n        return <FontAwesomeIcon icon=\"smog\" />;\n      case \"Drizzle\":\n        return <FontAwesomeIcon icon=\"cloud-rain\" className=\"cloud\" />;\n    }\n  };\n  const handleTemperatureCalculations = (temperature) => {\n      return unit === \"fahrenheit\"\n        ? floor((temperature - 273.15) * (9 / 5) + 32) + \"°F\"\n        : floor(temperature - 273.15) + \"°C\";\n  };\n  return (\n    <React.Fragment>\n      <HashRouter>\n        <NavBar />\n        <Switch>\n          <Route\n            path=\"/weather\"\n            render={() => (\n              <Weather\n                handleIconDisplay={handleIconDisplay}\n                handleTemperatureCalculations={handleTemperatureCalculations}\n              />\n            )}\n          ></Route>\n          <Route\n            path=\"/hourly-forecast\"\n            render={() => (\n              <HourlyForecast handleIconDisplay={handleIconDisplay} handleTemperatureCalculations={handleTemperatureCalculations} />\n            )}\n          ></Route>\n          <Route\n            path=\"/daily-forecast\"\n            render={() => (\n              <DailyForecast handleIconDisplay={handleIconDisplay} handleTemperatureCalculations={handleTemperatureCalculations}/>\n            )}\n          ></Route>\n          <Route\n            path=\"/notification-center\"\n            component={NotificationCenter}\n          ></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" exact to=\"/weather\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </HashRouter>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\nfunction weatherDataReducer(state = {}, action) {\n    switch (action.type) {\n      case \"WEATHER_REQUEST_SENT\":\n        return {\n          isRequesting: true,\n        };\n      case \"SET_WEATHER_SUCCESS\":\n        return {\n          ...state,\n          weather: action.payload,\n          isRequesting: false,\n        };\n      case \"SET_LOCATION\":\n        return {\n          ...state,\n          location: action.payload,\n        };\n      default:\n        return state;\n    }\n  }\n\n\nexport default weatherDataReducer;","const defaultState={\n    unit:\"fahrenheit\"\n}\n\n\nfunction settingsReducer(state=defaultState, action) {\n    switch (action.type) {\n      case \"SET_TEMP_UNIT\":\n        return {\n          ...state,\n          unit: action.payload,\n        };\n      default:\n        return state;\n    }\n  }\n\n\nexport default settingsReducer;","function notificationsReducer(state = {}, action) {\n    switch (action.type) {\n      case \"SET_ALERT_TYPE\":\n        return {\n          ...state,\n          type: action.payload,\n        };\n      case \"SET_ALERT_TIME\":\n        return {\n          ...state,\n          time: action.payload,\n        };\n      default:\n        return state;\n    }\n  }\n\n  export default notificationsReducer;","function errorReducer(state = {}, action) {\n    switch (action.type) {\n      case \"SET_WEATHER_FAILURE\":\n        return {\n          ...state,\n          errorStatus: true,\n          errorMessage: action.errorMessage,\n        };\n      case \"SET_WEATHER_SUCCESS\":\n        return {\n          errorStatus: false,\n          errorMessage: null,\n        };\n      default:\n        return state;\n    }\n  }\nexport default errorReducer;","import { persistReducer } from \"redux-persist\";\nimport { combineReducers } from \"redux\";\nimport sessionStorage from \"redux-persist/es/storage/session\";\nimport weatherDataReducer from \"./weatherData.reducer\";\nimport settingsReducer from \"./settings.reducer\";\nimport notificationsReducer from \"./notifications.reducer\";\nimport errorReducer from \"./error.reducer\";\n\nconst rootPersistConfig = {\n  key: \"root\",\n  storage: sessionStorage,\n};\n\n\nconst rootReducer = combineReducers({\n  weatherDataReducer,\n  settingsReducer,\n  notificationsReducer,\n  errorReducer,\n});\n\nexport default persistReducer(rootPersistConfig, rootReducer);\n","import weatherReducer from \"./reducers/rootReducer\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore } from \"redux-persist\";\n\nimport {createStore, combineReducers,applyMiddleware} from 'redux';\n\nconst reducers=combineReducers({weatherReducer});\nexport const store=createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\nexport const persistor = persistStore(store)\nexport default {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSun ,faCloud, faCloudShowersHeavy, faSearch, faCog, faBolt, faSnowflake, faSmog ,faCloudRain} from '@fortawesome/free-solid-svg-icons'\nimport reportWebVitals from './reportWebVitals';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {store, persistor} from \"./redux/store\";\nimport { Provider } from 'react-redux';\n\n\n\nlibrary.add(faSun, faCloud, faCloudShowersHeavy, faSearch, faCog, faBolt, faSnowflake, faSmog, faCloudRain);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n    <App />\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>\n,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}